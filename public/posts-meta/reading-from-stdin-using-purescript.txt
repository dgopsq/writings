Reading from the Standard Input (stdin) using PureScriptThese last few weeks I started learning PureScript again. I love this language, it‚Äôs the quintessence of functional programming, but it lacks in community and libraries compared for example to TypeScript, and this sadly makes it really difficult for me to use in my side projects.While I was doing some challenges online, I had the need to retrieve an input string from stdin. I found out that this case is not really well covered anywhere, so why not writing a new blog post? üôÉFirst of all, to read from the Standard Input (stdin) the library purescript-node-process is needed. This library exposes stdin which is a Readable (a simple readable stream) and it will be the key component around which we‚Äôll create our function. Since we are dealing with a simple stream, what we want to create is a function that takes that same stream and return a new string:This looks a bit messy but it‚Äôs actually simple. Since the process of handling a stream is ‚Äúevent-driven‚Äù we are going to use a safe mutable string (from purescript-st) to accumulate our input every time the onDataString event will be triggered. This whole process is asynchronous, meaning that we have to wait for the onEnd event (or onError if something bad happened) to actually return the accumulated string. The effect monad Aff solves this through makeAff. The res callback has to be called with an Either parameter, and only when this callback will be triggered the program can continue its execution.Peace ‚úåÔ∏è